@use 'sass:math';
@use './variables' as var;

@mixin reset {
  *, *::before, *::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  html:focus-within {
    scroll-behavior: smooth;
  }

  body {
    min-height: 100vh;
    text-rendering: optimizeSpeed;
  }

  image, picture {
    max-width: 100%;
    display: block;
  }

  input, button, textarea, select {
    font: inherit;
  }

  @media (prefers-reduced-motion: reduce) {
    html:focus-within {
      scroll-behavior: auto;
    }

    *, *::before, *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      scroll-behavior: auto !important;
    }
  }
}

@mixin globals {
  * {
    font-family: var.$font--sans-serif;
  }

  ::selection {
    background-color: rgba(var.$clr--pomegranate, .2);
  }

  section + section {
    margin-top: var.$scale--900;
  }

  h1, h2, h3, h4, h5, h6,
  p, label, button:not(:disabled) {
    color: var.$clr--eight-ball;
  }

  h1 {
    font-size: var.$scale--900;
    text-transform: uppercase;
    + * {
      margin-top: var.$scale--900;
    }
  }

  h2 {
    font-size: var.$scale--700;
    + * {
      margin-top: var.$scale--500;
    }
  }

  mark {
    background-color: rgba(var.$clr--pomegranate, .25);
    padding: math.div(var.$scale--100, 2) var.$scale--100;
  }

  p > mark {
    font-size: inherit;
  }

  p, mark, a {
    font-size: var.$scale--400;
    line-height: 1.8;
    & + & {
      margin-top: var.$scale--400;
    }

    &.large {
      font-size: var.$scale--500;
      line-height: 1.6;
    }

    &.lead {
      font-size: var.$scale--500;
      font-weight: bold;
      line-height: 1.6;
    }
  }

  .pre-title {
    font-size: var.$scale--300;
    font-style: italic;
    text-transform: uppercase;
    color: var.$clr--deep-larkspur;
  }

  a {
    color: var.$clr--deep-larkspur;
    &:focus {
      outline: none;
      background-color: rgba(var.$clr--deep-larkspur, .2);
      color: var.$clr--eight-ball;
    }
  }

  .page-container {
    width: min(100%, 45rem);
    margin-inline: auto;
    padding-block: var.$scale--900;
  }

  .hidden {
    position: absolute !important;
    overflow: hidden;
    clip: rect(1px, 1px, 1px, 1px);
    width: 1px;
    height: 1px;
    word-wrap: normal;
  }

  button.icon-button svg {
    width: 50%;
    height: auto;
  }
}

@mixin input-base($size: reg) {
  flex-grow: 1;
  line-height: 1.8;
  background: transparent;
  &::placeholder {
    font-style: italic;
  }

  @if $size == reg {
    padding: var.$scale--200 var.$scale--300;
  } @else if $size == lg {
    padding: var.$scale--300 var.$scale--400;
  } @else {
    @error "Unknown size #{$size}";
  }
}

@mixin form-base($block: var.$scale--900) {
  margin-block: $block;
  width: 100%;
}

@mixin inline-form($block: var.$scale--900) {
  $border-rad: .125rem;

  @include form-base($block: $block);
  display: flex;
  align-items: center;
  padding: var.$scale--100;

  border: .25rem solid var.$clr--deep-larkspur;
  border-radius: $border-rad;

  > input {
    @include input-base(lg);
    margin-right: var.$scale--100;
    border: none;
    border-radius: $border-rad;

    &:focus {
      outline: none;
      background: rgba(var.$clr--melody, .2);
    }
  }

  button {
    height: var.$scale--900;
    width: var.$scale--900;
    border-radius: $border-rad;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    border: .25rem solid var.$clr--deep-larkspur;
    background: var.$clr--deep-larkspur;

    transition:
            border-color var.$animation-duration--base ease-out,
            background-color var.$animation-duration--base ease-out;
    &:disabled {
      cursor: auto;
      pointer-events: none;
      background: var.$clr--alice-blue;
      border-color: var.$clr--melody;
    }

    &:focus {
      outline: .25rem solid rgba(var.$clr--approaching-dusk, .6);
      outline-offset: .125rem;
    }
  }
}